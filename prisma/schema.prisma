datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

// Define el modelo de la propiedad
model Property {
  id          Int     @id @default(autoincrement())
  address     String
  city        String
  type        String // Campo de tipo String para representar PropertyType
  images      Image[] @relation("PropertyImages")
  name        String?
  description String?
  price       Float?
  area        Float? // Área en metros cuadrados
  bedrooms    Int? // Número de habitaciones
  bathrooms   Int? // Número de baños
  amenities   String? // Amenidades separadas por comas
  latitude    Float? // Latitud geográfica
  longitude   Float? // Longitud geográfica
  status      String? // Campo de tipo String para representar PropertyStatus

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  // Otros campos...
}

// Define el modelo de imagen
model Image {
  id         Int      @id @default(autoincrement())
  url        String
  propertyId Int
  property   Property @relation("PropertyImages", fields: [propertyId], references: [id])
}
